!obj:pylearn2.train.Train {
    dataset: &train !obj:datasets.food100.FOOD100 {
        which_set: 'train',
        input_size: %(input_size)i,
        axes: %(axes)s,
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: %(batch_size)i,
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [%(img_height)i, %(img_width)i],
            num_channels: 3, 
        },
        layers: [ 
                 !obj:pylearn2.models.mlp.ConvRectifiedLinear {
                     layer_name: 'h1',
                     output_channels: %(output_channels_h1)i,
                     irange: .01,
                     kernel_shape: [%(kernel_side_h1)i, %(kernel_side_h1)i],
                     pool_shape: [%(pool_side_h1)i, %(pool_side_h1)i],
                     pool_stride: [%(pool_stride_h1)i, %(pool_stride_h1)i],
                     max_kernel_norm: 1.9365,
                 }, 
                 !obj:pylearn2.models.mlp.ConvRectifiedLinear {
                     layer_name: 'h2',
                     output_channels: %(output_channels_h2)i,
                     irange: .01,
                     kernel_shape: [%(kernel_side_h2)i, %(kernel_side_h2)i],
                     pool_shape: [%(pool_side_h2)i, %(pool_side_h2)i],
                     pool_stride: [%(pool_stride_h2)i, %(pool_stride_h2)i],
                     max_kernel_norm: 1.9365,
                 },
                 !obj:pylearn2.models.mlp.ConvElemwise {
                     layer_name: 'h3',
                     output_channels: %(output_channels_h3)i,
                     irange: .01,
                     kernel_shape: [%(kernel_side_h3)i, %(kernel_side_h3)i],
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     max_kernel_norm: 1.9365,
                     tied_b: 1,
                 },
                 !obj:pylearn2.models.mlp.ConvElemwise {
                     layer_name: 'h4',
                     output_channels: %(output_channels_h4)i,
                     irange: .01,
                     kernel_shape: [%(kernel_side_h4)i, %(kernel_side_h4)i],
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     max_kernel_norm: 1.9365,
                     tied_b: 1,
                 },
                 !obj:pylearn2.models.mlp.RectifiedLinear {
                     max_col_norm: 1.9365,
                     layer_name: 'h5',
                     dim: %(dim_h5)i,
                     sparse_init: %(sparse_init_h5)i
                 },
                 !obj:pylearn2.models.mlp.RectifiedLinear {
                     max_col_norm: 1.9365,
                     layer_name: 'h6',
                     dim: %(dim_h6)i,
                     sparse_init: %(sparse_init_h6)i
                 },
                 !obj:pylearn2.models.mlp.Sigmoid {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     dim: %(nb_classes)i,
                     istdev: .05,
                     monitor_style: 'bit_vector_class',
                 }
        ],
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: %(batch_size)i,
        learning_rate: %(learning_rate)f,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: .5,
        },
        train_iteration_mode: even_shuffled_sequential,
        monitor_iteration_mode: even_shuffled_sequential,
        monitoring_dataset: 
          {
            'train': *train,
            'valid': !obj:datasets.food100.FOOD100 {
                which_set: 'valid',
                input_size: %(input_size)i,
                axes: %(axes)s
            },
            'test': !obj:datasets.food100.FOOD100 {
                which_set: 'test',
                input_size: %(input_size)i,
                axes: %(axes)s
            },
          },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: 'valid_y_misclass',
            prop_decrease: 0.,
            N: 100
        },
    },
    extensions: [ 
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: '%(save_path_best)s'
        },
        !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: .7
        },
    ],
    save_path: '%(save_path)s',
    save_freq: 1
}
